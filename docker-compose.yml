version: '3.7'

services:
  barbershop:
    build: 
      context: .
      dockerfile: Dockerfile
    container_name: barbershop_app
    environment:
      - NODE_ENV=production
      - DATABASE_URL=postgresql://barbershop:${BARBERSHOP_DB_PASSWORD}@barbershop_db:5432/barbershop
      - SESSION_SECRET=${BARBERSHOP_SESSION_SECRET}
      - ADMIN_USERNAME=${BARBERSHOP_ADMIN_USERNAME:-admin}
      - ADMIN_PASSWORD=${BARBERSHOP_ADMIN_PASSWORD:-admin}
    depends_on:
      - barbershop_db
    restart: unless-stopped
    volumes:
      - ./logs:/app/logs
    networks:
      - root_default
      - services-network
    labels:
      - "traefik.enable=true"
      # Main HTTPS Router for barbershop website
      - "traefik.http.routers.barbershop-https.rule=Host(`${BARBERSHOP_DOMAIN}`)"
      - "traefik.http.routers.barbershop-https.entrypoints=websecure"
      - "traefik.http.routers.barbershop-https.tls=true"
      - "traefik.http.routers.barbershop-https.tls.certresolver=mytlschallenge"
      # HTTP Router with redirect to HTTPS
      - "traefik.http.routers.barbershop-http.rule=Host(`${BARBERSHOP_DOMAIN}`)"
      - "traefik.http.routers.barbershop-http.entrypoints=web"
      - "traefik.http.routers.barbershop-http.middlewares=redirect-to-https"
      # Service definition
      - "traefik.http.services.barbershop.loadbalancer.server.port=3000"

  barbershop_db:
    image: postgres:15-alpine
    container_name: barbershop_postgres
    environment:
      - POSTGRES_DB=barbershop
      - POSTGRES_USER=barbershop
      - POSTGRES_PASSWORD=${BARBERSHOP_DB_PASSWORD}
    volumes:
      - barbershop_postgres_data:/var/lib/postgresql/data
    restart: unless-stopped
    networks:
      - root_default
      - services-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U barbershop"]
      interval: 10s
      timeout: 5s
      retries: 3

volumes:
  barbershop_postgres_data:
    external: true

networks:
  root_default:
    external: true
  services-network:
    external: true